scalar Date

type EquipoDeTrabajo {
    id: ID!
    nombre: String!
    proyecto: String!
    lider: String!
    fechaCreacion: Date!
    descripcion: String
    trabajadores: [Trabajador!]!
}

type Trabajador {
    id: ID!
    nombre: String!
    apellido: String!
    rol: String!
    email: String!
    equipo: EquipoDeTrabajo
}

input EquipoDeTrabajoInput {
    nombre: String!
    proyecto: String!
    lider: String!
    fechaCreacion: Date!
    descripcion: String
}

input TrabajadorInput {
    nombre: String!
    apellido: String!
    rol: String!
    email: String!
    equipoId: ID
}

type Query {
    # Consultas para equipos
    equipos: [EquipoDeTrabajo!]!
    equipo(id: ID!): EquipoDeTrabajo
    
    # Consultas para trabajadores
    trabajadores: [Trabajador!]!
    trabajador(id: ID!): Trabajador
    trabajadoresPorEquipo(equipoId: ID!): [Trabajador!]!
}

type Mutation {
    # Mutaciones para equipos
    crearEquipo(input: EquipoDeTrabajoInput!): EquipoDeTrabajo!
    actualizarEquipo(id: ID!, input: EquipoDeTrabajoInput!): EquipoDeTrabajo!
    eliminarEquipo(id: ID!): Boolean!
    
    # Mutaciones para trabajadores
    crearTrabajador(input: TrabajadorInput!): Trabajador!
    actualizarTrabajador(id: ID!, input: TrabajadorInput!): Trabajador!
    eliminarTrabajador(id: ID!): Boolean!
}
